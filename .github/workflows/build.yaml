name: Build U-Boot for Orange Pi Zero 3

on:
  push:
    branches: [ "master" ]
    tags:
      - "v*"
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
        
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          make gcc bison flex libssl-dev swig \
          python3-dev python3-setuptools \
          device-tree-compiler crossbuild-essential-arm64 \
          gcc-aarch64-linux-gnu \
          libgnutls28-dev
        python3 -m pip install --upgrade pip setuptools pylibfdt

    - name: Build ATF (bl31.bin)
      run: |
        git clone --depth 1 https://github.com/ARM-software/arm-trusted-firmware.git
        cd arm-trusted-firmware
        make CROSS_COMPILE=aarch64-linux-gnu- PLAT=sun50i_h616 DEBUG=1 bl31
        cp build/sun50i_h616/debug/bl31.bin /home/runner/work/u-boot/u-boot/

    - name: Set up cross-compiler
      run: |
        echo "CROSS_COMPILE=aarch64-linux-gnu-" >> $GITHUB_ENV

    - name: Configure and build U-Boot
      run: |
        make orangepi_zero3_defconfig
        make -j$(nproc)

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: u-boot-binaries
        path: |
          u-boot-sunxi-with-spl.bin
        if-no-files-found: error

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      if: success()
      with:
        name: "U-Boot for Orange Pi Zero3 (${{ steps.get_version.outputs.version }})"
        tag_name: "v${{ github.run_number }}"
        generate_release_notes: true
        files: |
          u-boot/u-boot-sunxi-with-spl.bin
          u-boot/arch/arm/dts/sun50i-h618-orangepi-zero3.dtb
